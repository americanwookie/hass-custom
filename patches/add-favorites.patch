--- sonos-new.py.orig	2018-04-22 18:29:59.180561565 -0500
+++ sonos-new.py	2018-04-22 19:11:55.002485481 -0500
@@ -48,6 +48,7 @@
 SERVICE_CLEAR_TIMER = 'sonos_clear_sleep_timer'
 SERVICE_UPDATE_ALARM = 'sonos_update_alarm'
 SERVICE_SET_OPTION = 'sonos_set_option'
+SERVICE_PLAY_FAVORITE = 'sonos_play_favorite'
 
 DATA_SONOS = 'sonos'
 
@@ -58,6 +59,7 @@
 
 # Service call validation schemas
 ATTR_SLEEP_TIME = 'sleep_time'
+ATTR_FAVORITE = 'favorite_name'
 ATTR_ALARM_ID = 'alarm_id'
 ATTR_VOLUME = 'volume'
 ATTR_ENABLED = 'enabled'
@@ -88,6 +90,10 @@
     vol.Optional(ATTR_WITH_GROUP, default=True): cv.boolean,
 })
 
+SONOS_PLAY_FAVORITE_SCHEMA = SONOS_SCHEMA.extend({
+    vol.Required(ATTR_FAVORITE): cv.string,
+})
+
 SONOS_SET_TIMER_SCHEMA = SONOS_SCHEMA.extend({
     vol.Required(ATTR_SLEEP_TIME):
         vol.All(vol.Coerce(int), vol.Range(min=0, max=86399))
@@ -211,6 +217,8 @@
                 device.set_alarm(**service.data)
             elif service.service == SERVICE_SET_OPTION:
                 device.set_option(**service.data)
+            elif service.service == SERVICE_PLAY_FAVORITE:
+                device.play_favorite(service.data[ATTR_FAVORITE])
 
             device.schedule_update_ha_state(True)
 
@@ -234,6 +242,11 @@
         DOMAIN, SERVICE_SET_TIMER, service_handle,
         schema=SONOS_SET_TIMER_SCHEMA)
 
+    #TODO add schema, update services.yaml
+    hass.services.register(
+        DOMAIN, SERVICE_PLAY_FAVORITE, service_handle,
+        schema=SONOS_PLAY_FAVORITE_SCHEMA)
+
     hass.services.register(
         DOMAIN, SERVICE_CLEAR_TIMER, service_handle,
         schema=SONOS_SCHEMA)
@@ -1027,6 +1040,20 @@
         alarm.save()
 
     @soco_error()
+    @soco_coordinator
+    def play_favorite(self, favorite_name, **kwargs):
+        favorites = self._player.get_sonos_favorites()
+        wanted = None
+        for favorite in favorites['favorites']:
+            if favorite['title'] == favorite_name:
+                wanted = favorite
+        if wanted:
+          self._player.play_uri( uri=wanted['uri'],
+                                 meta=wanted['meta'],
+                                 title='Hello world',
+                                 start=True )
+
+    @soco_error()
     def set_option(self, **data):
         """Modify playback options."""
         if ATTR_NIGHT_SOUND in data and self._night_sound is not None:
